//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Media       1
#define Nav         2
#define Mouse       3
#define Sym         4
#define Num         5
#define Fun         6
#define Button      7
#define Game        8
#define Gameplus    9

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        snake_case_lt: snake_case_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "SNAKE_CASE_LT";
            bindings = <&lt 4 SPACE>, <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        Ctrl_v_PgDown: Ctrl_v_PgDown {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_V_PGDOWN";
            bindings = <&kp PG_DN>, <&kp V>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        Ctrl_c: Ctrl_c {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_C";
            bindings = <&none>, <&kp C>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        cmd_V_PgDown: cmd_V_PgDown {
            compatible = "zmk,behavior-mod-morph";
            label = "CMD_V_PGDOWN";
            bindings = <&kp PG_DN>, <&kp V>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        cmd_c: cmd_c {
            compatible = "zmk,behavior-mod-morph";
            label = "CMD_C";
            bindings = <&none>, <&kp C>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        dsktp_switch_left: dsktp_switch_left {
            compatible = "zmk,behavior-mod-morph";
            label = "DSKTP_SWITCH_LEFT";
            bindings = <&win_dsktp_left>, <&mac_dsktp_left>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        dsktp_switch_right: dsktp_switch_right {
            compatible = "zmk,behavior-mod-morph";
            label = "DSKTP_SWITCH_RIGHT";
            bindings = <&win_dsktp_right>, <&mac_dsktp_right>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmb_home {
            bindings = <&kp HOME>;
            key-positions = <13 16>;
            layers = <0 2>;
        };

        cmb_end {
            bindings = <&kp END>;
            key-positions = <13 18>;
            layers = <0 2>;
        };

        cmb_enter {
            bindings = <&kp ENTER>;
            key-positions = <25 32>;
            layers = <0 2>;
        };

        cmb_down {
            bindings = <&kp DOWN>;
            key-positions = <13 17>;
            layers = <0>;
        };

        cmb_up {
            bindings = <&kp UP_ARROW>;
            key-positions = <13 7>;
            layers = <0>;
        };

        cmb_mac_sol {
            bindings = <&mac_sol>;
            key-positions = <13 16>;
            layers = <1>;
        };

        cmb_mac_eol {
            bindings = <&mac_eol>;
            key-positions = <13 18>;
            layers = <1>;
        };
    };

    macros {
        sql_ssf: sql_ssf {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp LS(E) &kp LS(L) &kp LS(E) &kp LS(C) &kp LS(T) &kp SPACE &kp STAR &kp SPACE &kp LS(F) &kp LS(R) &kp LS(O) &kp LS(M) &kp SPACE>;
            label = "SQL_SSF";
        };

        sql_distinct: sql_distinct {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp LS(E) &kp LS(L) &kp LS(E) &kp LS(C) &kp LS(T) &kp SPACE &kp LS(D) &kp LS(I) &kp LS(S) &kp LS(T) &kp LS(I) &kp LS(N) &kp LS(C) &kp LS(T) &kp SPACE>;
            label = "SQL_DISTINCT";
        };

        mac_eol: mac_eol {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "MAC_EOL";
        };

        mac_sol: mac_sol {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "MAC_SOL";
        };

        win_dsktp_right: win_dsktp_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_CONTROL>;

            label = "WIN_DSKTP_RIGHT";
        };

        win_dsktp_left: win_dsktp_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_CONTROL>;

            label = "WIN_DSKTP_LEFT";
        };

        mac_dsktp_right: mac_dsktp_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "MAC_DSKTP_RIGHT";
        };

        mac_dsktp_left: mac_dsktp_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "MAC_DSKTP_LEFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
              &kp Q             &kp W       &kp E        &kp R            &kp T                   &kp Y      &kp U           &kp I        &kp O       &kp P
              &hm LEFT_GUI A    &hm LALT S  &hm LCTRL D  &hm LSHIFT F     &kp G                   &kp H      &hm RSHFT J     &hm RCTRL K  &hm RALT L  &hm RGUI SEMICOLON
&lt 5 ESCAPE  &mt LEFT_SHIFT Z  &kp X       &kp C        &kp V            &kp B                   &kp N      &kp M           &kp COMMA    &kp DOT     &kp SLASH           &kp APOSTROPHE
                                            &kp DELETE   &lt 2 BACKSPACE  &mt LEFT_CONTROL TAB    &kp ENTER  &snake_case_lt  &kp MINUS
            >;
        };

        base_mac {
            label = "Base_mac";
            bindings = <
              &kp Q             &kp W       &kp E        &kp R            &kp T               &kp Y      &kp U           &kp I        &kp O       &kp P
              &hm LEFT_GUI A    &hm LALT S  &hm LCTRL D  &hm LSHIFT F     &kp G               &kp H      &hm RSHFT J     &hm RCTRL K  &hm RALT L  &hm RGUI SEMICOLON
&lt 5 ESCAPE  &mt LEFT_SHIFT Z  &kp X       &kp C        &kp V            &kp B               &kp N      &kp M           &kp COMMA    &kp DOT     &kp SLASH           &kp APOSTROPHE
                                            &kp DELETE   &lt 3 BACKSPACE  &mt LEFT_GUI TAB    &kp ENTER  &snake_case_lt  &kp MINUS
            >;
        };

        Nav {
            label = "Nav";
            bindings = <
           &kp GRAVE       &kp HOME   &kp UP_ARROW    &kp END         &kp LBRC    &kp RBRC  &kp NUMBER_7              &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
           &kp LEFT_ALT    &kp LEFT   &kp DOWN_ARROW  &kp RIGHT       &kp LBKT    &kp RBKT  &hm RIGHT_SHIFT NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&kp LCTRL  &kp LEFT_SHIFT  &kp PG_UP  &Ctrl_c         &Ctrl_v_PgDown  &kp LPAR    &kp RPAR  &kp NUMBER_1              &kp NUMBER_2  &kp NUMBER_3  &kp KP_MULTIPLY  &kp EQUAL
                                      &trans          &trans          &trans      &trans    &kp PLUS                  &kp DOT
            >;
        };

        nav_mac {
            label = "nav_mac";
            bindings = <
              &kp GRAVE       &mac_sol   &kp UP_ARROW  &mac_eol              &kp LBRC    &kp RBRC  &kp NUMBER_7             &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
              &kp LEFT_ALT    &kp LEFT   &kp DOWN      &hm LEFT_SHIFT RIGHT  &kp LBKT    &kp RBKT  &hm LEFT_SHIFT NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&kp LEFT_GUI  &kp LEFT_SHIFT  &kp PG_UP  &cmd_c        &cmd_V_PgDown         &kp LPAR    &kp RPAR  &kp NUMBER_1             &kp NUMBER_2  &kp NUMBER_3  &kp KP_MULTIPLY  &kp EQUAL
                                         &trans        &trans                &trans      &trans    &kp PLUS                 &kp DOT
            >;
        };

        Sym {
            label = "Sym";
            bindings = <
        &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND       &kp KP_ASTERISK  &kp SQT              &kp DQT
        &trans    &trans  &trans    &trans      &trans         &trans     &dsktp_switch_left  &trans           &dsktp_switch_right  &trans
&trans  &trans    &trans  &trans    &trans      &trans         &kp UNDER  &kp EQUAL           &trans           &trans               &kp SLASH  &kp HOME
                          &trans    &trans      &trans         &trans     &trans              &trans
            >;
        };

        Fun {
            label = "Fun";
            bindings = <
        &none  &none     &none          &none   &to 6     &trans  &trans  &trans  &kp END  &kp F1
        &none  &sql_ssf  &sql_distinct  &none   &to 1     &trans  &none   &trans  &none    &kp F10
&trans  &none  &none     &none          &none   &to 0     &trans  &trans  &trans  &trans   &kp F20  &kp F7
                         &trans         &trans  &trans    &trans  &trans  &trans
            >;
        };

        Gaming {
            bindings = <
            &kp Z           &kp X  &kp C         &kp V      &sl 7               &trans  &trans  &trans  &trans  &trans
            &kp TAB         &kp Q  &kp W         &kp E      &kp R               &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &kp LEFT_SHIFT  &kp A  &kp S         &kp D      &kp F               &trans  &trans  &trans  &trans  &trans  &trans
                                   &kp LEFT_ALT  &kp SPACE  &kp LEFT_CONTROL    &trans  &trans  &trans
            >;

            label = "Gaming";
        };

        Gaming+ {
            bindings = <
        &kp F10  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp T     &kp RA(RC(Y))  &kp RA(RC(U))  &trans  &trans  &kp LC(RA(DEL))
        &kp L    &kp O         &kp Y         &kp K         &kp G     &kp F5         &trans         &trans  &trans  &trans
&trans  &to 0    &trans        &trans        &trans        &trans    &trans         &trans         &trans  &trans  &trans           &kp LA(F4)
                               &kp J         &kp I         &kp M     &trans         &trans         &trans
            >;

            label = "Gaming+";
        };
    };
};
